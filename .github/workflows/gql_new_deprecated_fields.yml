# This workflow will detect the introduction of any new deprecated graphql fields
name: New deprecated graphql fields

on:
  workflow_call:
    inputs:
      base_branch:
        description: "Base branch"
        required: true
        type: string
        default: ""
      schema_urls:
        description: "Schema URLs to lint, comma separated. E.g: https://graphql.sketch.cloud/api/graphql,https://payments.prod.sketch.com/payments/graphql"
        required: true
        type: string
        default: "https://graphql.sketch.cloud/api/graphql,https://payments.prod.sketch.com/payments/graphql,https://capacitor.prod.sketch.com/api/introspection"
      query_files:
        description: "Paths of query files to lint, comma separated. E.g: Modules/SketchCloudKit/Source/Resources/SketchQL Queries/SketchQL/**/*.graphql,Modules/SharedEditing/Resources/CapacitorQL/**/*.graphql"
        required: true
        type: string
        default: ""
      ignore_files:
        description: "Paths of files to ignore, comma separated. E.g: ./packages/gql-types/graphql/**/local.*.gql,other/path/**/*.graphql"
        required: false
        type: string
        default: ""
      fail_new_deprecations:
        description: "Fail the workflow new deprecations are found"
        required: true
        type: boolean
        default: false

# ensures this workflow can run in parallel to the other workflows
concurrency: gql_deprecated_fields

# To write annotations to the PR
permissions: 
  checks: write

jobs:
  checkNewDeprecatedFieldUsage:
    name: Check deprecated field usage
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Install gql-lint
        run: curl https://raw.githubusercontent.com/sketch-hq/gql-lint/main/install.sh | /bin/bash -s -- v2

      # Checkout the pr's branch
      - uses: actions/checkout@v3

      - name: Generate gql-lint files command segment
        id: gql-lint-command-segment
        run: echo OUT=$(bash .github/scripts/build_gql_arguments.sh "${{ inputs.schema_urls }}" "${{ inputs.query_files }}" "${{ inputs.ignore_files }}") >> $GITHUB_OUTPUT

      - name: Find deprecated queries used in the PR branch
        run: gql-lint deprecation --output json ${{ steps.gql-lint-command-segment.outputs.OUT }} > /tmp/pr.json

      - name: Find all deprecated queries currently in use in the PR branch
        id: deprecated-fields
        run: |
          echo 'FIELDS<<EOF' >> $GITHUB_OUTPUT
          gql-lint deprecation ${{ steps.gql-lint-command-segment.outputs.OUT }} >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Get changed files
        id: changed-files
        uses: jitterbit/get-changed-files@v1
        with:
          format: "json"

      - name: Save changed files JSON
        run: echo '${{ steps.changed-files.outputs.added_modified }}' | jq . > /tmp/changed_files.json

      - name: Generate annotations JSON
        run: .github/scripts/transform_report_to_annotations.sh /tmp/pr.json /tmp/changed_files.json > /tmp/annotations.json

      - name: Annotate files
        uses: yuzutech/annotations-action@v0.4.0
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          title: "GraphQL Lint"
          input: "/tmp/annotations.json"

      # Checkout branch we're planning to merge into
      - uses: actions/checkout@v3
        with:
          ref: "${{ inputs.base_branch }}"

      - name: Find deprecated queries used in the base branch
        run: gql-lint deprecation --output json ${{ steps.gql-lint-command-segment.outputs.OUT }} > /tmp/base.json

      - name: Diff to find any new deprecated fields introduced by PR branch
        id: diff-fields
        run: |
          gql-lint diff /tmp/base.json /tmp/pr.json
          echo 'DIFF<<EOF' >> $GITHUB_OUTPUT
          gql-lint diff /tmp/base.json /tmp/pr.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - uses: mshick/add-pr-comment@v2
        if: steps.diff-fields.outputs.DIFF == ''
        with:
          message-id: gql-deprecated
          message: |
            ✅ No new usage of deprecated graphql fields found.

            <details>
            <summary>All deprecated fields currently in use</summary>

            ```
            ${{ steps.deprecated-fields.outputs.FIELDS }}
            ```
            </details>

            NB: this will only check queries in graphql files, not queries embedded in code.

            Files checked:
            - `${{ env.SKETCHQL_FILES }}`
            - `${{ env.CAPACITOR_FILES }}`

      - uses: mshick/add-pr-comment@v2
        if: steps.diff-fields.outputs.DIFF != ''
        with:
          message-id: gql-deprecated
          message: |
            **⚠️ Found the following new fields that are marked as deprecated**
            ```
            ${{ steps.diff-fields.outputs.DIFF }}
            ```

            <details>
            <summary>All deprecated fields currently in use</summary>

            ```
            ${{ steps.deprecated-fields.outputs.FIELDS }}
            ```
            </details>

            NB: this will only check queries in graphql files, not queries embedded in code.

            Files checked:
            - `${{ env.SKETCHQL_FILES }}`
            - `${{ env.CAPACITOR_FILES }}`

      - name: Fail if new deprecated fields are found
        if: inputs.fail_new_deprecations && steps.diff-fields.outputs.DIFF != ''
        run: echo "Failing workflow because new deprecated fields were found" && exit 1